# -*- mode: yaml -*-
# This example configuration for provides basic automations to get started with gitStream.
# View the gitStream quickstart for more examples: https://docs.gitstream.cm/quick-start/
manifest:
  version: 1.0

automations:
  # Add a label that indicates how many minutes it will take to review the PR.
  estimated_time_to_review:
    if:
      - true
    run:
      - action: add-label@v1
        args:
          label: "{{ calc.etr }} min review"
          color: {{ 'E94637' if (calc.etr >= 20) else ('FBBD10' if (calc.etr >= 5) else '36A853') }}

  # Post a comment that lists the best experts for the files that were modified.
  explain_code_experts:
    if:
      - true
    run:
      - action: explain-code-experts@v1
        args:
          gt: 10
          
  # Flag PRs that are missing a Jira ticket reference in the title or description.
  # https://docs.gitstream.cm/integrations/jira/
  label_missing_jira_info:
    if:
      - {{ not (has.jira_ticket_in_title or has.jira_ticket_in_desc) }}
    run:
      - action: add-label@v1
        args:
          label: "missing-jira"
          color: {{ colors.red }}

  # Flag PRs that have unresolved comment threads.
  # https://docs.gitstream.cm/automations/standard/label-management/label-unresolved-threads/
  label_unresolved_threads:  
    if:
      - {{ pr.status == 'open' }}  
      - {{ pr.unresolved_threads > 0 }}
    run:
      - action: add-label@v1
        args:
          label: "üö® {{ pr.unresolved_threads }} Unresolved Thread(s)"
          color: {{ colors.yellow }}  

  # Flag PRs that delete files to highlight potential refactors that need extra scrutiny.
  # https://docs.gitstream.cm/automations/label-deleted-files/
  flag_deleted_files:
    if:
      - {{ has.deleted_files }}
    run: 
      - action: add-label@v1
        args:
          label: "üóëÔ∏è Deleted files"
          color: {{ colors.orange }}

  # Use AI to generate a concise bullet-point summary of the changes in the pull request.
  # https://docs.gitstream.cm/automations/integrations/askAI/#ask-ai-to-summarize-the-changes-in-a-pr
  ask_ai_describe:
    if:
      - {{ pr.labels | match(term="askai describe") | some }}
    run:
      - action: add-comment@v1
        args:
          comment: |
            # üìú PR Summary üìú
            {{ source | askAI("
              Summarize the changes in this PR in bullet points.", env.ANTHROPIC_API_TOKEN) | encode }}

  # Use AI to perform a comprehensive code review, identify bugs, security risks, performance issues, deprecated methods, and style guide violations, and suggests improvements.
  # https://docs.gitstream.cm/automations/integrations/askAI/#ask-ai-for-a-code-review
  ask_ai_review:
    if:
      - {{ pr.labels | match(term="askai review") | some }}
    run:
      - action: add-comment@v1
        args:
          comment: |
            # ‚ú® gitStream Review ‚ú®
            {{ source | askAI("
              Review the PR code diff.
              - Identify bugs, security risks, and performance issues
              - Check for deprecated methods and style guide violations
              - Provide specific improvement suggestions based on the changes", env.ANTHROPIC_API_TOKEN) | encode }}

  # Combination of the above two actions, run automatically
  ask_ai_describe_and_review:
    if:
      - {{ size.is.small or size.is.medium }}
    run:
      - action: add-comment@v1
        args:
          comment: |
            # üìú PR Summary üìú
            {{ source | askAI("
              Summarize the changes in this PR in bullet points.", env.ANTHROPIC_API_TOKEN) | encode }}
      - action: add-comment@v1
        args:
          comment: |
            # ‚ú® gitStream Review ‚ú®
            {{ source | askAI("
              Review the PR code diff.
              - Identify bugs, security risks, and performance issues
              - Check for deprecated methods and style guide violations
              - Provide specific improvement suggestions based on the changes", env.ANTHROPIC_API_TOKEN) | encode }}

  # Track usage of AI coding assistants like Cursor and Copilot
  # Based on https://docs.gitstream.cm/integrations/linearb/#track-the-impact-of-generative-ai-initiatives
  comment_ai_assistance_prompt:
    # Post a comment for all PRs to prompt the PR author to indicate whether they used AI to assist coding in this PR
    if:
      - true
    run:
      - action: add-comment@v1
        args:
          comment: |
            Please mark whether you used AI to assist coding in this PR:

            - [ ] Cursor
            - [ ] Tabnine
            - [ ] Copilot
            - [ ] JetBrains AI
            - [ ] IntelliCode
            - [ ] ChatGPT
            - [ ] Other
            - [ ] Not AI-assisted

  # If the PR author has indicated that they used AI to assist coding in this PR, apply a label indicating this
  # Based on https://docs.gitstream.cm/integrations/linearb/#track-the-impact-of-generative-ai-initiatives
  label_ai_pr_cursor:
    if:
      - {{ pr.comments | filter(attr='commenter', term='gitstream-cm') | filter(attr='content', regex=r/\- \[x\] Cursor/) | some }}
    run:
      - action: add-labels@v1
        args:
          labels: ['ü§ñ ai-assisted', 'ü§ñ ai-cursor']
          color: {{ colors.purple }}

  # If the PR author has indicated that they used AI to assist coding in this PR, apply a label indicating this
  # Based on https://docs.gitstream.cm/integrations/linearb/#track-the-impact-of-generative-ai-initiatives
  label_ai_pr_tabnine:
    if:
      - {{ pr.comments | filter(attr='commenter', term='gitstream-cm') | filter(attr='content', regex=r/\- \[x\] Tabnine/) | some }}
    run:
      - action: add-labels@v1
        args:
          labels: ['ü§ñ ai-assisted', 'ü§ñ ai-tabnine']
          color: {{ colors.purple }}

  # If the PR author has indicated that they used AI to assist coding in this PR, apply a label indicating this
  # Based on https://docs.gitstream.cm/integrations/linearb/#track-the-impact-of-generative-ai-initiatives
  label_ai_pr_copilot:
    if:
      - {{ pr.comments | filter(attr='commenter', term='gitstream-cm') | filter(attr='content', regex=r/\- \[x\] Copilot/) | some }}
    run:
      - action: add-labels@v1
        args:
          labels: ['ü§ñ ai-assisted', 'ü§ñ ai-copilot']
          color: {{ colors.purple }}

  # If the PR author has indicated that they used AI to assist coding in this PR, apply a label indicating this
  # Based on https://docs.gitstream.cm/integrations/linearb/#track-the-impact-of-generative-ai-initiatives
  label_ai_pr_jetbrains:
    if:
      - {{ pr.comments | filter(attr='commenter', term='gitstream-cm') | filter(attr='content', regex=r/\- \[x\] JetBrains/) | some }}
    run:
      - action: add-labels@v1
        args:
          labels: ['ü§ñ ai-assisted', 'ü§ñ ai-jetbrains']
          color: {{ colors.purple }}

  # If the PR author has indicated that they used AI to assist coding in this PR, apply a label indicating this
  # Based on https://docs.gitstream.cm/integrations/linearb/#track-the-impact-of-generative-ai-initiatives
  label_ai_pr_intellicode:
    if:
      - {{ pr.comments | filter(attr='commenter', term='gitstream-cm') | filter(attr='content', regex=r/\- \[x\] IntelliCode/) | some }}
    run:
      - action: add-labels@v1
        args:
          labels: ['ü§ñ ai-assisted', 'ü§ñ ai-intellicode']
          color: {{ colors.purple }}

  # If the PR author has indicated that they used AI to assist coding in this PR, apply a label indicating this
  # Based on https://docs.gitstream.cm/integrations/linearb/#track-the-impact-of-generative-ai-initiatives
  label_ai_pr_jetbrains:
    if:
      - {{ pr.comments | filter(attr='commenter', term='gitstream-cm') | filter(attr='content', regex=r/\- \[x\] ChatGPT/) | some }}
    run:
      - action: add-labels@v1
        args:
          labels: ['ü§ñ ai-assisted', 'ü§ñ ai-chatgpt']
          color: {{ colors.purple }}

  # If the PR author has indicated that they used AI to assist coding in this PR, apply a label indicating this
  # Based on https://docs.gitstream.cm/integrations/linearb/#track-the-impact-of-generative-ai-initiatives
  label_ai_pr_other:
    if:
      - {{ pr.comments | filter(attr='commenter', term='gitstream-cm') | filter(attr='content', regex=r/\- \[x\] Other/) | some }}
    run:
      - action: add-labels@v1
        args:
          labels: ['ü§ñ ai-assisted', 'ü§ñ ai-other']
          color: {{ colors.purple }}

# The next function calculates the estimated time to review and makes it available in the automation above.
calc:
  etr: {{ branch | estimatedReviewTime }}

has:
  jira_ticket_in_title: {{ pr.title | includes(regex=r/\b[A-Za-z]+-\d+\b/) }}
  jira_ticket_in_desc: {{ pr.description | includes(regex=r/atlassian.net\/browse\/\w{1,}-\d{3,4}/) }}
  deleted_files: {{ source.diff.files | map(attr='new_file') | match(term='/dev/null') | some }}

# These are all of the colors in GitHub's default label color palette.
colors:
  red: 'b60205'
  orange: 'd93f0b'
  yellow: 'fbca04'
  green: '0e8a16'
  blue: '1d76db'
  purple: '5319e7'

size:
  is:
    small: {{ branch.diff.size < 20 }}
    medium: {{ branch.diff.size >= 20 and branch.diff.size < 100 }}
    large: {{ branch.diff.size >= 100 }}
