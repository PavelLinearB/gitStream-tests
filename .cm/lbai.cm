manifest:
  version: 1.0

triggers:
  on:
    - commit
    - pr_created

automations:
  dump_source:
    if:
      - true
    run:
      - action: add-comment@v1
        args:
          comment: |
            --SOURCE DUMP:--
            {{ source | dump | safe }}

  ask_ai_review:
    if:
      - {{ pr.labels | match(term="LB CR") | some }}
    run:
      - action: add-comment@v1
        args:
          comment: |
            # ✨ gitStream Review. ✨
            {{ source | LinearB_AI(prompt="Perform a detailed code review based on the provided code diff. For each modified file:
              - Analyze the changes and identify only issues requiring further changes, such as bugs, performance issues, or improvements in readability, maintainability, or adherence to best practices
              - Exclude descriptions of changes already implemented in the PR. Highlight only areas needing further action
              - Include comments on unchanged code if relevant to the modifications
              - Organize issues by file name and sort by line number
              - For each issue:
                - Use a collapsible section with a title that includes a short description, the file name, and line numbers
                - Dynamically state the issue type (e.g., bugfix, performance, readability, etc..) based on its nature
                - Provide actionable suggestions with refactored code snippets formatted as GitHub markdown using a diff format (+ for additions, - for removals)
                - Demonstrate how to apply the suggested improvement in the code
              - Focus strictly on actionable feedback requiring further work; avoid restating or describing changes already present") }}

  ask_ai_review2:
    if:
      - {{ pr.labels | match(term="LB CR") | some }}
    run:
      - action: add-comment@v1
        args:
          comment: |
            # ✨ gitStream Review ✨
            {{ source | LinearB_AI(prompt="Perform a detailed code review based on the provided code diff. For each modified file:
              - Analyze the changes and identify bugs, performance issues, or improvements in readability, maintainability, or adherence to best practices
              - Include comments on unchanged code if relevant to the modifications to provide a complete context for improvement
              - Reference specific lines in the diff and any relevant unchanged code for each issue
              - For each issue:
                - Use a collapsible section with a summary that includes the issue title, file name, and line numbers.
                - Provide actionable suggestions with a refactored code snippet in GitHub markdown, using a code diff format (+ for additions, - for removals)
                - Clearly demonstrate how the improvement can be implemented
              - Organize issues logically, order by file name and line number within each file.
              - Deliver actionable, specific feedback focused on the changes and their immediate context; avoid unrelated or generic comments.") }}
