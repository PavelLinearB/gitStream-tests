# -*- mode: yaml -*-
# This example configuration for provides basic automations to get started with gitStream.
# View the gitStream quickstart for more examples: https://docs.gitstream.cm/quick-start/

manifest:
  version: 1.0

automations:
   test:
    if:
      - true
    run:
      - action: add-comment@v1
        args:
          comment: {{ "aaa" | pasha | dump }}
  
  # print_jira:
  #  if:
  #    - true
  #  run:
  #    - action: add-comment@v1
  #      args:
  #        comment: |
  #          {{ jira_params | dump | safe }}
  #    - action: add-comment@v1
  #      args:
  #        comment: |
  #          {{ jira_details }}

  trigger_check:
    if:
      - {{ pr.title | capture(regex=r/test/) }}
    run:
      - action: add-label@v1
        args:
          label: "test :)"

  test_comment:
    on:
      - commit
    if:
      - true
    run:
      - action: add-comment@v1
        args:
          comment: "{{ branch.diff.size }}"

  approve_and_merge_audit_fix_prs:
    if:
      - {{ branch.name | includes(term="merge") }}
    run:
      - action: approve@v1
      - action: add-label@v1
        args:
          label: 'auto-approved'
          color: '008000'
      - action: merge@v1

  safe_changes:
    if:
      - {{ is.safe }}
    run:
      - action: approve@v1

      - action: add-label@v1
        args:
          label: 'safe-changes'

  docs_change:
    if:
      - {{ is.docs }}
    run:
      - action: approve@v1

      - action: add-label@v1
        args:
          label: 'docs-changes'

  tests_change:
    if:
      - {{ is.tests }}
    run:
      - action: approve@v1

      - action: add-label@v1
        args:
          label: 'tests-changes'

  formatting_change:
    if:
      - {{ is.formatting }}
    run:
      - action: approve@v1

      - action: add-label@v1
        args:
          label: 'formatting-changes'

  print_formatting:
    if:
      - true
    run:
      - action: add-comment@v1
        args:
          comment: |
            "Formatting: {{ source.diff.files | isFormattingChange }}"


  # send_webhook_message:
  #  if:
  #    - true
  #  run:
  #    - action: send-http-request@v1
  #      args:
  #        url: "https://webhook.site/63365e5d-d986-4147-892e-fff75e6c2132"
  #        method: POST
  #        headers: '{"Content-type": "application/json", "Authorization": "Bearer LALA"}'
  #        body: '{ "roomId": "PAPA", "text": "This PR has been waiting and was created by {{ pr.author }} for {{ pr.url }}"}'
  
  
jira_params:
  url: "pavelvaks.atlassian.net"
  username: "pavel_vaks"
  token: "env.JIRA_TOKEN"
  issue_key: {{ branch.name | capture(regex=r/[A-Z]+\-\d+/) }}

is:
  docs: {{ files | allDocs }}
  tests: {{ files | allTests }}
  asset: {{ files | match(regex=r/\.(png|svg|gif|css)$/) | every }}
  formatting: {{ source.diff.files | isFormattingChange }}
  safe: {{ is.docs or is.tests or is.asset or is.formatting }}

  additions: {{ branch.diff.files_metadata | map(attr='additions') | sum }}
  deletions: {{ branch.diff.files_metadata | map(attr='deletions') | sum }}
  small_changes: {{ (is.additions + is.deletions) <= 10 }}
