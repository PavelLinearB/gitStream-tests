# -*- mode: yaml -*-
# This example configuration for provides basic automations to get started with gitStream.
# View the gitStream quickstart for more examples: https://docs.gitstream.cm/quick-start/

manifest:
  version: 1.0

automations:
  # test:
  #  if:
  #    - true
  #  run:
  #    - action: add-comment@v1
  #      args:
  #        comment: {{ "aaa" | pasha | dump }}

  print_jira:
    if:
      - true
    run:
      - action: add-comment@v1
        args:
          comment: |
            {{ jira_params | dump | safe }}
      - action: add-comment@v1
        args:
          comment: |
            {{ jira_details }}

  trigger_check:
    if:
      - {{ pr.title | capture(regex=r/test/) }}
    run:
      - action: add-label@v1
        args:
          label: "test :)"

  draft_label:
    on:
      - pr_created
      - commit
    if:
      - true
    run:
      - action: add-label@v1
        args:
          label: "DRAFT"

  approve_and_merge_audit_fix_prs:
    if:
      - {{ branch.name | includes(term="merge") }}
    run:
      - action: approve@v1
      - action: add-label@v1
        args:
          label: 'approved-audit-fix'
          color: '{{ colors.green }}'
      - action: merge@v1

  send_webhook_message:
    if:
      - true
    run:
      - action: send-http-request@v1
        args:
          url: "https://webhook.site/e87125fc-3c2f-46a1-8e6f-0270b5c5060d"
          method: POST
          headers: '{"Content-type": "application/json", "Authorization": "Bearer LALA"}'
          body: '{ "roomId": "PAPA", "text": "This PR has been waiting and was created by {{ pr.author }} for {{ pr.url }}"}'
  
  
jira_params:
  url: "pavelvaks.atlassian.net"
  username: "pavel_vaks"
  token: "env.JIRA_TOKEN"
  issue_key: {{ branch.name | capture(regex=r/[A-Z]+\-\d+/) }}

jira_details: {{ jira_params.issue_key | getJiraIssueDetails(username, token, url) }}
